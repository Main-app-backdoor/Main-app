name: Code Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  analyze_cpp:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Gets full history for better analysis

      - name: Install Cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck

      - name: Run Cppcheck
        continue-on-error: true
        run: |
          # Find all C++ files and process them in smaller batches
          find . -type f \( -name "*.cpp" -o -name "*.cxx" -o -name "*.cc" \) | \
          while read -r file; do
            cppcheck \
              --enable=all \
              --inconclusive \
              --std=c++11 \
              --language=c++ \
              --force \
              --verbose \
              --error-exitcode=0 \
              "$file" 2>> cppcheck_errors.txt || true
          done
          cat cppcheck_errors.txt

      - name: Upload Cppcheck errors
        uses: actions/upload-artifact@v3
        with:
          name: cppcheck-errors
          path: cppcheck_errors.txt

  analyze_swift:
    runs-on: macos-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Verify SwiftLint Installation
        run: swiftlint version

      - name: Run SwiftLint
        continue-on-error: true
        run: |
          # Run SwiftLint on the entire codebase
          swiftlint lint \
            --strict \
            --reporter detailed \
            > swiftlint_errors.txt 2>&1 || true
          cat swiftlint_errors.txt

      - name: Upload SwiftLint errors
        uses: actions/upload-artifact@v3
        with:
          name: swiftlint-errors
          path: swiftlint_errors.txt

  analyze_infer:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential openjdk-11-jdk maven
          wget -O infer-linux64-v1.1.0.tar.xz https://github.com/facebook/infer/releases/download/v1.1.0/infer-linux64-v1.1.0.tar.xz
          tar -xf infer-linux64-v1.1.0.tar.xz
          sudo mv infer-linux64-v1.1.0 /opt/infer
          sudo ln -s /opt/infer/bin/infer /usr/local/bin/infer

      - name: Run Infer
        continue-on-error: true
        run: |
          infer run --keep-going -- make
          infer analyze \
            --keep-going \
            --jobs 4 \
            > infer_errors.txt 2>&1 || true
          cat infer_errors.txt

      - name: Upload Infer errors
        uses: actions/upload-artifact@v3
        with:
          name: infer-errors
          path: infer_errors.txt

  create_release:
    runs-on: ubuntu-22.04
    needs: [analyze_cpp, analyze_swift, analyze_infer]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download analysis artifacts
        uses: actions/download-artifact@v3
        with:
          names: |
            cppcheck-errors
            swiftlint-errors
            infer-errors

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: analysis-results-${{ github.sha }}
          release_name: Analysis Results
          body: Analysis results for commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Cppcheck errors
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cppcheck_errors.txt
          asset_name: cppcheck_errors.txt
          asset_content_type: text/plain

      - name: Upload SwiftLint errors
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: swiftlint_errors.txt
          asset_name: swiftlint_errors.txt
          asset_content_type: text/plain

      - name: Upload Infer errors
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: infer_errors.txt
          asset_name: infer_errors.txt
          asset_content_type: text/plain